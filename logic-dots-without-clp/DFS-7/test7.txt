/***************************test for 7*****************************/





ProblemR=[3,0,2,2,0,4,1],
ProblemC=[1,1,3,3,1,1,2],
Puzzle = [
[0/0/0,0/1/0,0/2/1,0/3/1,0/4/0,0/5/1,0/6/0],
[1/0/0,1/1/0,1/2/0,1/3/0,1/4/0,1/5/0,1/6/0],
[2/0/0,2/1/0,2/2/1,2/3/0,2/4/0,2/5/0,2/6/1],
[3/0/0,3/1/0,3/2/1,3/3/0,3/4/1,3/5/0,3/6/0],
[4/0/0,4/1/0,4/2/0,4/3/0,4/4/0,4/5/0,4/6/0],
[5/0/1,5/1/1,5/2/0,5/3/1,5/4/0,5/5/0,5/6/1],
[6/0/0,6/1/0,6/2/0,6/3/1,6/4/0,6/5/0,6/6/0]],
Puzzle = [A,B,C,D,E,F,G],
Solution=[R1,R2,R3,R4,R5,R6,R7],
dfs_solver(ProblemR,ProblemC,[A,B,C,D,E,F,G], Path), last(Path, Solution).


/******************************************************/


ProblemR=[4,3,3,3,1,6,1],
ProblemC=[5,2,3,5,1,1,4],
Puzzle = [
[0/0/_,0/1/_,0/2/_,0/3/_,0/4/0,0/5/0,0/6/_],
[1/0/_,1/1/0,1/2/_,1/3/_,1/4/_,1/5/0,1/6/_],
[2/0/_,2/1/0,2/2/_,2/3/_,2/4/0,2/5/_,2/6/_],
[3/0/_,3/1/_,3/2/_,3/3/_,3/4/_,3/5/_,3/6/_],
[4/0/_,4/1/_,4/2/_,4/3/_,4/4/_,4/5/_,4/6/_],
[5/0/_,5/1/_,5/2/_,5/3/_,5/4/0,5/5/_,5/6/_],
[6/0/_,6/1/_,6/2/_,6/3/_,6/4/_,6/5/_,6/6/_]],
Puzzle = [A,B,C,D,E,F,G],
Solution=[R1,R2,R3,R4,R5,R6,R7],
dfs_solver(ProblemR,ProblemC,[A,B,C,D,E,F,G], Path), last(Path, Solution).
/******************************************************/

ProblemR=[2,1,1,2,2,2,2],
ProblemC=[5,0,0,0,3,0,4],
Puzzle = [
[0/0/_,0/1/_,0/2/_,0/3/0,0/4/_,0/5/0,0/6/_],
[1/0/0,1/1/0,1/2/0,1/3/0,1/4/_,1/5/0,1/6/_],
[2/0/_,2/1/_,2/2/0,2/3/_,2/4/_,2/5/_,2/6/_],
[3/0/1,3/1/0,3/2/_,3/3/0,3/4/_,3/5/_,3/6/1],
[4/0/1,4/1/_,4/2/0,4/3/_,4/4/_,4/5/_,4/6/1],
[5/0/1,5/1/_,5/2/_,5/3/0,5/4/_,5/5/_,5/6/_],
[6/0/1,6/1/_,6/2/_,6/3/_,6/4/_,6/5/_,6/6/_]],
Puzzle = [A,B,C,D,E,F,G],
Solution=[R1,R2,R3,R4,R5,R6,R7],
dfs_solver(ProblemR,ProblemC,[A,B,C,D,E,F,G], Path), last(Path, Solution).


